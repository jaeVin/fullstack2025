swagger: "2.0"
info:
  description: "This is a sample ToDo API. You can use it to manage your tasks, including CRUD operations on ToDos."
  version: "1.0.0"
  title: "ToDo API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "support@todoapi.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "backend.vm1.test"
basePath: "/api"
tags:
  - name: "todo"
    description: "Operations related to ToDos"
schemes:
  - "http"
  - "https"
paths:
  /todos:
    get:
      tags:
        - "todo"
      summary: "List all ToDos"
      description: "Retrieves a list of all the ToDos in the system."
      operationId: "index"
      produces:
        - "application/json"
      responses:
        "200":
          description: "A list of ToDos"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ToDo"
    post:
      tags:
        - "todo"
      summary: "Create a new ToDo"
      description: "Creates a new ToDo item."
      operationId: "store"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "ToDo object that needs to be added."
          required: true
          schema:
            $ref: "#/definitions/ToDo"
      responses:
        "201":
          description: "ToDo created"
          schema:
            $ref: "#/definitions/ToDo"

  /todos/{todoId}:
    get:
      tags:
        - "todo"
      summary: "Get a specific ToDo by ID"
      description: "Retrieves a ToDo item by its ID."
      operationId: "show"
      produces:
        - "application/json"
      parameters:
        - name: "todoId"
          in: "path"
          description: "The ID of the ToDo to retrieve"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "ToDo item"
          schema:
            $ref: "#/definitions/ToDo"
        "404":
          description: "ToDo not found"

    put:
      tags:
        - "todo"
      summary: "Update an existing ToDo"
      description: "Updates an existing ToDo item by ID."
      operationId: "update"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "todoId"
          in: "path"
          description: "The ID of the ToDo to update"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Updated ToDo object"
          required: true
          schema:
            $ref: "#/definitions/ToDo"
      responses:
        "200":
          description: "ToDo updated"
          schema:
            $ref: "#/definitions/ToDo"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "ToDo not found"

    delete:
      tags:
        - "todo"
      summary: "Delete a ToDo"
      description: "Deletes a specific ToDo item by ID."
      operationId: "destroy"
      produces:
        - "application/json"
      parameters:
        - name: "todoId"
          in: "path"
          description: "ID of the ToDo to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "204":
          description: "ToDo deleted"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "ToDo not found"

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  oauth2:
    type: "oauth2"
    authorizationUrl: "https://todoapi.example.com/oauth/authorize"
    flow: "implicit"
    scopes:
      read: "Read your tasks"
      write: "Modify your tasks"

definitions:
  ToDo:
    type: "object"
    required:
      - "title"
      - "description"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Finish homework"
      description:
        type: "string"
        example: "Complete the math assignment"
    xml:
      name: "ToDo"
